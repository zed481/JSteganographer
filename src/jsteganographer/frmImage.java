package jsteganographer;

import java.awt.Dimension;
import java.awt.FileDialog;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 * Affichage de l'image avec le texte chiffré et encodé à l'intérieur
 *
 * mars 2021
 */
public class frmImage extends javax.swing.JFrame {

    final private BufferedImage image;
    final private String strOriginalFile;

    public frmImage( BufferedImage image, String strOriginalFile ) {
        initComponents();
        this.image = image;
        this.strOriginalFile = strOriginalFile;
        jLabel1.setText( "" );
        jLabel1.setIcon( new javax.swing.ImageIcon( image ) );
        jLabel1.setPreferredSize( new Dimension( image.getHeight(), image.getWidth() ) );
        this.setPreferredSize( new Dimension( image.getWidth() + 45, image.getHeight() + 80 ) );
        this.pack();
        this.setLocationRelativeTo( null ); // centerscreen
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmdSaveImage = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Image containing the encoded text!");

        jLabel1.setText("Label pour afficher l'image encodée");

        cmdSaveImage.setText("Save");
        cmdSaveImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSaveImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(112, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(cmdSaveImage)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cmdSaveImage)
                .addGap(3, 3, 3)
                .addComponent(jLabel1)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdSaveImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveImageActionPerformed
        try {
            final FileDialog fd = new FileDialog( this, "Destination", FileDialog.SAVE );
            fd.setFile( strOriginalFile );
            fd.setVisible( true );

            if ( fd.getFile() != null ) {
                String strNomFichier = fd.getDirectory().concat( fd.getFile() );
                if ( !strNomFichier.toLowerCase().endsWith( ".png" ) ) {
                    strNomFichier = fd.getDirectory().concat( fd.getFile() ).concat( ".png" );
                }
                saveImageToPath( image, new File( strNomFichier ), "png" );
            }
        } catch ( IOException ioex ) {
            JOptionPane.showMessageDialog( this, ioex, "Oops!", JOptionPane.ERROR_MESSAGE );
            ioex.printStackTrace( System.err );
        }
    }//GEN-LAST:event_cmdSaveImageActionPerformed

    private static void saveImageToPath( BufferedImage image, File file, String extension ) throws IOException {
        file.delete();
        ImageIO.write( image, extension, file );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdSaveImage;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

}
